////////////////////////////////////////////////////////////////////////////////
//
// ROOT DIRECTORY / directory.textree
//
////////////////////////////////////////////////////////////////////////////////

// Geonef standard: all absolute URLs should include variable 'url_base_path'
:var url_base_path = "/"
:if REQUEST.headers["ext-base-path"]
  :var url_base_path = REQUEST.headers["ext-base-path"]

// This is necessary to handle errors (404 Not Found, especially)
:: error
  = 1 && \{ type: "http", name: "status", value: 404 \}
  :serialize
  // check
  :source error-404.textree

:var title_components = []

// Pour toutes les pages (100 % inspiré de "doc" sur x.geonef.fr)
:: page
  :var _class = ""
  :: _class := @class
  :: title := /TEXT
  :: note
  :var css = []
  :: css
    :: css += /TEXT
    :through
  :var stylesheets = []
  :: stylesheet
    :: stylesheets += /TEXT
    :through
  :var scripts = []
  :: script
    :: scripts += /TEXT
    :through
  :var content = []
  :: content += /*/
  :through
  |<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">\

  html
    head
      meta(content=text/html; charset=utf-8, http-equiv=content-type)
      meta(http-equiv=X-UA-Compatible,content=chrome=1)
      meta(itemprop=isFamilyFriendly,content=True)
      meta(name=viewport,content=width=device-width, maximum-scale=1)
      link(rel=shortcut icon,href=/favicon.ico)
      title= title || "Gitted"
      link(rel=stylesheet, type=text/css)
        = 1 && \{ type: "attr", name: "href", value: url_base_path + "assets/style.css" \}
      :each stylesheet in stylesheets
        link(rel=stylesheet, type=text/css)
          = 1 && \{ type: "attr", name: "href", value: url_base_path + stylesheet \}
      :each script in scripts
        script(type=text/javascript)
          = 1 && \{ type: "attr", name: "src", value: url_base_path + script \}
      style(type=text/css)
        = css.join("")
    body
      = 1 && \{ type: "class", value: "page "+_class \}
      :each el in content
        :through el

// en-tête de toutes les pages
:: site-header
  header.site
    h1
      a.logo(href=/) Gitted I/O
      span.sep
      :var _url = ""
      :each component in title_components
        :eval _url = _url + "../"
        a
          = 1 && \{ type: "attr", name: "href", value: _url \}
          = component
        span.sep
      :through

:: site-nav
  nav
    h2 Website contents
    ul
      li Sysconf
      li Gitted
      li Project status
      li Command reference
        ul
          li {sysconf}
          li {sysconf-target}
          li {gitted}
          li {gitted-target}

:: site-footer
  footer.site
    span
      ext(href=//github.com/sysconf/gitted.gitted-io/tree/textree) Improve this website
    span.fsep
    span
      ext(href=//creativecommons.org/licenses/by-nc-sa/4.0/) Content under Creative Commons CC BY NC SA
    span.fsep
    span
      a(href=#) Back to top

:: sysconf
  a(href=reference/sysconf/) Sysconf
:: sysconf-target
  a(href=reference/sysconf-target/) Sysconf-target
:: gitted
  a(href=reference/gitted/) Gitted
:: gitted-target
  a(href=reference/gitted-target/) Gitted-target


////////////////////////////////////////////////////////////////////////////////
// GEONEF COMMON TEMPLATES
//
// (manually shared with x.geonef.fr)

// "q" wraps content with English quotes (with CSS "content")
:: q {span.quote {:through}}

// "e" like "expression": file path, variable name, command pipe, etc.
:: e {span.expr {:through}}

// Make an external link (attribute "href" must be provided)
:: ext {a(target=_blank) {:through}}

// Make a raw URL clickable
:: url
  :: url = /TEXT
  :through
  ext
    = 1 && \{ type: "attr", name: "href", value: url \}
    = url


////////////////////////////////////////////////////////////////////////////////
// That's all, process URL path:
:shift-directory
