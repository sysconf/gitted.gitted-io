////////////////////////////////////////////////////////////////////////////////
//
// ROOT DIRECTORY / index.textree       -- homepage of gitted.io
//
////////////////////////////////////////////////////////////////////////////////

:: sysconf
  a(href=sysconf/) Sysconf
:: sysconf-target
  a(href=sysconf/target/) Sysconf-target
:: gitted
  a(href=gitted/) Gitted
:: gitted-target
  a(href=gitted/target/) Gitted-target

page


  // header.band
  //   h1 Gitted

  //   div#anchors
  //     a(href=#nb1) nb1
  //     span.sep
  //     a(href=#nb2) nb2


  //////////////////////////////////////////////////////////////////////

  section
    h2 From {sysconf} to {gitted}
    p This Free Software project started in early 2014 as {sysconf}, a simple shell script to help managing configuration files across systems, using the minimalist {a(href=sysconf/convention/) symlink pattern convention}.
    p Then {sysconf-target} was written to help setting up {sysconf} on {b remote systems} while being capable of {b auto-creating containers} and virtual machines.
    p {gitted} does something else: {b import/export machine state} as Git branches. It features push-to-deploy and pull-to-backup on various state data like MySQL, PostgreSQL, MongoDB or local directories (see: Gitted drivers).
    p {gitted-target} is to {gitted} what {sysconf-target} is to Sysconf: manage a remote {gitted} system and git-pull-push it!

    h3 4 bash scripts to rule them all
    ul
      li {gitted-target} uses {sysconf-target} to reach {gitted} on remote machine
      li {sysconf-target} create virtal machines and containers and reach them all (SSH included)
      li {sysconf} configures a new or existing machine
      li {sysconf} installs the {gitted} setup
      li {gitted} upgrades {sysconf} like other machine state
      li driver-gitted-target makes the process recursive: manage guest machines as gitted state from a host (or peer) machine


  section
    section
      h3 Define and setup a machine with {sysconf}
      p Sysconf suggests a way to organise custom system files (like /etc config or /usr/bin/ scripts) in a central directory that is easy to manage, backup and sync.
      p The idea is to move any custom file like /etc/cron.daily/some-task) to /sysconf/actual/tree/etc/cron.daily/some-task and replace the original file with a symbolic link pointing toward its location in /sysconf/.
      p As a shell script, the {sysconf} tool provides commands to manipulate the /sysconf tree.

    section
      h3 Access &amp; deploy machines with {sysconf-target}

    section
      h3 Import/export state data as Git branches with {gitted}

    section
      h3 Push-to-deploy and pull-to-backup with {gitted-target}

  section
    h2 Use cases
    section
      h3 S
      ul
        li
    section
      ul
        li Deploy a LXC container from a GitHub sysconf repo



  //////////////////////////////////////////////////////////////////////

  site-footer

:end
